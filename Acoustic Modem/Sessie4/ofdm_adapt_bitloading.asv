% Exercise session 4: DMT-OFDM transmission scheme
L_CP=100;  %length cyclic prefix
SNR =Inf;     
L = 100;      %Channel order
DFTsize = 512;
N=DFTsize;


  h = [-0.000117806361009542;-6.35073149979295e-05;0.000148772813085734;-5.09997293123670e-05;-3.73273581652360e-05;0.000109800563485032;2.03623798612299e-05;-2.64896776329267e-05;-7.21984151627543e-05;-0.000109720904614347;9.38092781554181e-05;-0.000191936298490750;-0.000329678650927421;0.000857393471375034;-0.00469296482747279;0.00869315809676425;-0.00754121466280920;-0.00187543742909424;0.0250419305540766;-0.139442581878913;0.0285294248488547;0.153031452622206;-0.109949162711814;0.0423086075887725;0.113719174964889;-0.0782985398643644;0.00508136718914438;0.0270042956599710;-0.0531860228717104;0.0120676180247180;-0.0288843282291479;-0.0253841711856690;0.0143743249270383;-0.0280215497076475;0.00842607267898210;0.0174710523095611;-0.000992320504693603;0.0269193514518572;0.0172861034508791;0.00331642873740753;0.0116476573950360;-0.00715678358556105;-0.0141029888653270;-0.00503180596946365;-0.0111262076546111;-0.00876684927500512;-0.00675570015726142;-0.0108448806415707;-0.00465271973966649;-0.000385444683648259;0.00198505897042121;0.00880670364669409;0.0102292572662437;0.0115663656681205;0.0108959299902284;0.00694839336085255;0.00430164544042320;-0.000396177541003699;-0.00375633508179228;-0.00601445142517570;-0.00761418490732689;-0.00705102647846649;-0.00614010162353057;-0.00651461086138985;-0.000977280059850523;0.00484041908558847;-0.00264779590942283;0.00220920501226362;0.0116743249911572;0.000296322094929267;-3.27216147082476e-05;0.00686796343434006;-0.00223102261874216;-0.00250385316614465;0.00151984902402860;-0.00307146627895252;-0.00107960591512407;-0.000310779180771214;-0.00250391844972797;0.000852371460728626;-0.00109739786729450;-0.00148518965208504;0.00208760565077804;-0.00149172615382126;-0.00137850745927384;0.000898163757592046;-0.00202261982799577;-0.000728277305256777;0.00101624940525626;0.000358901291781296;0.00184439762618447;0.00186746709829024;0.00141252719279210;0.00156917186343500;0.000341168300019457;-0.000540585274386862;-0.000553674848606139;-0.00107075622987391;-0.00226057367545313;-0.00213450692208273;];
  H = fft(h,N);
  Ps = abs(H).^2;
  
  Pn = [0.000302425599637246;4.44401518584121e-05;3.24651917648293e-05;0.000169707639809359;0.000231175559568947;8.47105041963635e-05;0.000321700082834423;0.00124240261526102;0.00134411586242986;0.000399233743808850;0.000178663733208933;0.000348900504951085;0.000257792379975337;0.000256600898970588;0.000177325205526363;0.000149622958843402;0.000126527389864848;0.000135050563191080;0.000179543980560584;0.000122296904347924;0.000176469884723169;0.000182520961721868;0.000209166422594808;0.000330518139734167;0.000333109868105224;0.000337913213642244;0.000309978649004216;0.000210096890588598;0.000170508632588594;0.000205781091482415;0.000231652158291205;0.000178201550211279;0.000198527450626239;0.000252989722022267;0.000218830289542053;0.000199782745889175;0.000142512105448578;0.000105713316443189;0.000122562794509395;9.38626017154836e-05;0.000105871010963527;0.000113733501334302;0.000113706738441163;0.000154890377723336;0.000145954930229868;0.000187457540333121;0.000253587876441302;0.000193970235579149;0.000173739513994400;0.000191665627069209;0.000133845551872350;9.96070939012881e-05;7.79171601378667e-05;6.57725614364512e-05;8.50898232840648e-05;9.57559207666558e-05;0.000132699707839891;0.000177099564995295;0.000168530607305379;0.000131924489514224;9.78353288420091e-05;7.74750293086253e-05;7.75971588935143e-05;5.41698988132323e-05;2.94936083910146e-05;2.37131624583632e-05;1.91987050535530e-05;2.59223765569707e-05;1.91553359468984e-05;4.88912804070341e-05;9.17474828087161e-05;0.000118043577107408;0.000123714678544109;9.94241778218658e-05;0.000137724322703981;0.000154819194201158;0.000200562458089868;0.000245762539884461;0.000215795787773939;0.000330771565596372;0.000313480575602631;0.000242967490966455;0.000484883717028913;0.000524257221616868;0.000377448345688151;0.000395905256811085;0.000305336338929441;0.000173576864663895;0.000120021708866803;5.19494792664528e-05;2.79250378292874e-05;2.62564821135439e-05;3.04069721961071e-05;4.08233265790497e-05;6.07025225888664e-05;8.16554208653668e-05;8.71979586695754e-05;0.000103044134042586;0.000127986745206391;0.000135077513059739;8.44591560240912e-05;8.82650696415568e-05;0.000130054024159953;7.96953631812551e-05;5.15676789967616e-05;5.73388646633744e-05;5.95411534916653e-05;7.74208985112041e-05;7.32776735355072e-05;7.22695647993982e-05;6.49023030182215e-05;4.53945132031315e-05;5.83970695985434e-05;7.07269007320247e-05;5.23680290406659e-05;6.41199186760894e-05;8.97233987781074e-05;7.98487329688949e-05;8.19976784887661e-05;0.000100734201601716;9.01426636544505e-05;5.95388141127629e-05;0.000101813601227001;0.000128253662863286;0.000108981070810308;0.000176237024503365;0.000155479264952937;0.000126989716173055;0.000174935066466802;0.000139974806961382;0.000149995532157648;0.000143488808028789;0.000150135064564603;0.000218734151216887;0.000190739050982669;0.000174873677912802;0.000155475820251451;0.000155612547195104;0.000206078829340742;0.000148245338665633;9.97796505806902e-05;0.000159373540172478;0.000175365924550397;0.000166239926664747;0.000295256825217528;0.000336065500760465;0.000284595399255082;0.000386721097477796;0.000398754186736948;0.000387905736615259;0.000466568196399048;0.000580690560300658;0.000658176899881343;0.000467495582102805;0.000457169164602978;0.000513300099297617;0.000513139410325698;0.000766084990148600;0.000595663707200105;0.000647981714187186;0.000932363297805157;0.000734568881693670;0.000985939840536464;0.000910988667273959;0.000856212413214048;0.00129689872228792;0.000878794374490262;0.000944530096733466;0.00124838040140293;0.000883088534885455;0.000869205190472313;0.00105680425974821;0.00132857806402408;0.00114057377291767;0.00134047376032499;0.00174728305420582;0.00128833905311602;0.00189430700593608;0.00210728806085667;0.00149470237865702;0.00226287058518261;0.00228796624430202;0.00160561720750144;0.00222252357674936;0.00285301077718204;0.00266524297910999;0.00241599857293512;0.00250249613506165;0.00253607425854325;0.00264158023557383;0.00359974692516553;0.00351846813012315;0.00267258799949712;0.00359907136557734;0.00333897591393650;0.00275075246128733;0.00348489324045291;0.00302962584556805;0.00292375395084531;0.00266239213902365;0.00290866292916993;0.00386027778971929;0.00365276869175022;0.00391921398908276;0.00319504410831244;0.00276297496226583;0.00314274221848161;0.00242367650492260;0.00278357469208505;0.00295284971241065;0.00257508091345843;0.00239874000450563;0.00175738031762965;0.00162673818229811;0.00152008921267667;0.00131328952777511;0.00110128385715869;0.00113543995608922;0.00153738201888317;0.00129489423671780;0.00108279744679275;0.00107006354450110;0.000935674468469981;0.00100878703611591;0.000872548197829559;0.000620764906154373;0.000603333894324808;0.000643545583341865;0.000616317719965206;0.000581058901431050;0.000480511577191725;0.000418543720031341;0.000612686396402791;0.000600103374811751;0.000442057954971566;0.000614332868015824;0.000669954190134625;0.000546984227112334;0.000399444940296926;0.000313283509963762;0.000502283028193926;0.000481256306131243;0.000326418369992656;0.000364649615528997;0.000308946652368476;0.000257995522991434;0.000221452882798054;0.000162736045332526;0.000201444834384747;0.000211682291191271;0.000182591702231828;0.000176830191442671;0.000229191754135397;0.000221160671555378;0.000131376692681750;0.000177527202393424;];
  
  b = floor(log2(1+Ps(1:N/2)./(10*Pn)));
  
  % QAM modulation

goodFreqs = find(b>0);
b2 = b(goodFreqs);
  
% Convert BMP image to bitstream
[bitStream, imageData, colorMap, imageSize, bitsPerPixel] = imagetobitstream('image.bmp');

% Make size compatible
% rest = rem(length(bitStream),length(goodFreqs*Nq))
% newBitStream = bitStream;
% if ~(rest == 0)
%     newBitStream = [bitStream; zeros(length(goodFreqs)*Nq-rest,1)];
% end
bitsperframe = sum(b2);
rest = rem(length(bitStream),bitsperframe)
newBitStream2 = bitStream;
if ~(rest == 0)
    newBitStream2 = [bitStream; zeros(bitsperframe-rest,1)];
end  

P = length(newBitStream2) / bitsperframe;

bitMatrix = reshape(newBitStream2,bitsperframe,P);

modulators = modem.qammod('M', 2, 'InputType', 'Bit');
for i = 2:15
    modulators = [modulators modem.qammod('M', 2^i, 'InputType', 'Bit')];
end

k = 0;
qamMatrix = zeros(length(b2),P);
for i = 1 : length(b2)
%       bits = reshape(bitMatrix(i+k:i+k+b2(i)-1,:),P*b2(i),1);
      qamMatrix(i,:) = modulate(modulators(b2(i)),bitMatrix(k+1:k+b2(i),:));
      k = k + b2(i);
end

qamStream = reshape(qamMatrix,length(b2)*P,1);

% OFDM modulation
% < slechte freqs bepalen => meegeven met ofdm mob en demod
ofdmStream = ofdm_mod(qamStream,N,L_CP,goodFreqs);


rxOfdmStream = filter(h,1,ofdmStream);
wxOfdmStream = awgn(rxOfdmStream,SNR,'measured');

% OFDM demodulation
rxQamStream = ofdm_demod(wxOfdmStream,N,L_CP,H,P,goodFreqs);
% rxQamStream = rxOfdmStream;

demodulators = modem.qamdemod('M', 2, 'OutputType', 'Bit');
for i = 2:15
    demodulators = [demodulators modem.qamdemod('M', 2^i, 'OutputType', 'Bit')];
end

k = 0;
rxQamMatrix = reshape(qamStream,length(b2),P);
rxBitMatrix = zeros(bitsperframe,P);
for i = 1 : length(b2)
      rxBitMatrix(k+1:k+b2(i),:) = demodulate(demodulators(b2(i)),rxQamMatrix(i,:));
      k = k + b2(i);
end
rxBitStream = reshape(rxBitMatrix,bitsperframe*P,1);

% QAM demodulation
% l = size(bitStream);
% m = 1;
% while(l > 0)
%     k = 1;
%     for i = 1 : length(b2)
%         rxBitStream(k:k+b2(i)-1,1) = qam_demod(rxQamStream(i+m),2^b2(i+m));
%         k = k + b2(i);
%         l = l - b2(i);
%     end
%     m = m+1;
% end

% Compute BER
   berTransmission = ber(bitStream,rxBitStream(1:length(bitStream)));

% Construct image from bitstream
imageRx = bitstreamtoimage(rxBitStream, imageSize, bitsPerPixel);

% Plot images
figure()
subplot(2,1,1); colormap(colorMap); image(imageData); axis image; title('Original image'); drawnow;
subplot(2,1,2); colormap(colorMap); image(imageRx); axis image; title(['Received image']); drawnow;
