% Exercise session 4: DMT-OFDM transmission scheme
L_CP=100;  %length cyclic prefix
SNR =20;     
L = 100;      %Channel order
M = 4;
DFTsize = 512;
N=DFTsize;

% Convert BMP image to bitstream
[bitStream, imageData, colorMap, imageSize, bitsPerPixel] = imagetobitstream('image.bmp');
rest = rem(length(bitStream),N/2-1);
newBitStream = bitStream;
if ~(rest == 0)
    newBitStream = [bitStream; zeros(N/2-1-rest,1)];
end
if rem
    

% QAM modulation                                    
qamStream = qam_mod(newBitStream,M);
P=size(qamStream,1)/(N/2-1);
% nullen toevoegen als laatste frame maar deels gevuld

% OFDM modulation
ofdmStream = ofdm_mod2(qamStream,N,L_CP,P);

% Channel
% h  = rand(1,L+1);
  h = [-9.22879670688165e-05;3.56214768818749e-05;3.91680248037144e-05;-2.97976654616785e-05;-6.17263933418558e-06;1.72638127093404e-05;-1.90517111393291e-05;-5.52194578773692e-05;3.61250199339899e-06;1.57096280013995e-06;-1.54492178585805e-05;1.33397315650867e-05;2.70081300679973e-05;-0.000176131794728316;0.000725733954295157;-0.00205236987847849;0.00238277116904321;0.000589058070256261;-0.00768648124471313;0.0195422214329152;-0.0521769165690127;-0.0204460244579698;0.0930569559367802;-0.0347506586541538;-0.0249208230925699;0.0834447593364908;-0.0274285683151925;-0.0376359457487532;0.0363831647610233;-0.0224395497661520;-0.0126426139511731;0.00436091042619090;-0.0193741017275891;0.00586636280384731;-0.00164256726393032;-0.00559640841257125;0.0146706627698798;0.00552441468269647;0.00344747955780993;0.00995155779902753;0.00429823966280165;0.00103257840781371;-0.000974788604214912;-0.00600694262206286;-0.00475560979614893;-0.00395057854767396;-0.00578268942018669;-0.00400417995176700;-0.00268429867225264;-0.00340749195304738;-0.000367821182159410;0.00279307257430717;0.00222838588829675;0.00393521756374231;0.00531703396194384;0.00409319831910335;0.00367480933823937;0.00261033110986758;0.00129614330364484;0.000303248432573510;-0.000887433745166720;-0.00203289700539817;-0.00333419654482432;-0.00302127763797142;-0.00287970674169197;-0.00273439207301592;-0.000288725256403764;-0.000909181443709224;-0.000843538041227185;0.00223043303368389;0.00121401119408940;0.00110583630251250;0.00340835019071451;0.00163429658303784;0.000334337907999136;0.00146168877630949;-0.000572278107000777;-0.00194268365093444;-0.00162194558087975;-0.00283748949030259;-0.000960183827424909;-0.000837614390772489;-0.00278136086975402;0.000562193000554495;0.00121386620131401;-0.000936735797721149;0.00174228971500664;0.00172001563333010;-0.000364172998092015;0.00176423805344836;0.00122771806451310;-0.000688410329066528;0.000334603436495198;-0.000385430344862218;-0.00133209076673710;-0.000559837123935855;-0.000805868372827485;-0.000407099817431730;0.000268230584006422;-0.000119596130753232;];
  H = fft(h,N);
  
  plot(20*log(abs(H)));
figure(2)
 rxOfdmStream = filter(h,1,ofdmStream);
  wxOfdmStream = awgn(rxOfdmStream,SNR,'measured');

% OFDM demodulation
rxQamStream = ofdm_demod2(wxOfdmStream,N,P,L_CP,H);
% rxQamStream = rxOfdmStream;

% QAM demodulation
rxBitStream = qam_demod(rxQamStream,M);

% Compute BER
 berTransmission = ber(bitStream(1:length(rxBitStream)),rxBitStream);

% Construct image from bitstream
imageRx = bitstreamtoimage(rxBitStream, imageSize, bitsPerPixel);

% Plot images
subplot(2,1,1); colormap(colorMap); image(imageData); axis image; title('Original image'); drawnow;
subplot(2,1,2); colormap(colorMap); image(imageRx); axis image; title(['Received image']); drawnow;
