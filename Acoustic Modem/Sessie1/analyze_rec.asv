
fs = 16000;
freq = 400;
dftsize = 1024;

t = zeros(2*fs,1);
for i=1:2*fs
   t(i,1)= (1/fs)*i;
end

% sig = sin(2*pi*freq*t);
% sig = sin(2*pi*50*t) + sin(2*pi*100*t) + sin(2*pi*200*t) + sin(2*pi*500*t) + sin(2*pi*1000*t) + sin(2*pi*2000*t) + sin(2*pi*4000*t) + sin(2*pi*6000*t);
sig = awgn
soundsc(sig, fs);

[simin,nbsecs,fs] = initparams(sig,fs);

sim('recplay');
out=simout.signals.values;

figure(1);

[S1,F1,T1,P1] = spectrogram(simin(:,2),dftsize,dftsize/2,dftsize,fs,'yaxis'); %vensterlengte, overlap, DFT size(gelijk aan vensterlengte)
[S2,F2,T2,P2] = spectrogram(out,dftsize,dftsize/2,dftsize,fs,'yaxis');

subplot(2,1,1);
imagesc(T1,F1,20*log(abs(S1)));

subplot(2,1,2);
imagesc(T2,F2,20*log(abs(S2)));

figure(2);
subplot(2,1,1);
semilogy(F1,mean(P1,2)); %gemiddelde genomen => 1 curve
subplot(2,1,2);
semilogy(F2,mean(P2,2));

